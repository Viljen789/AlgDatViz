.mergeSortContainer {
	width: 100%;
	height: 100%;
	display: flex;
	flex-direction: column;
	gap: var(--spacing-sm);
	padding: var(--spacing-sm);
	background-color: var(--color-background);
	overflow: hidden;
}

.phaseIndicator {
	text-align: center;
	font-size: var(--font-size-base);
	font-weight: 600;
	color: var(--color-primary);
	padding: var(--spacing-sm);
	background-color: var(--color-surface);
	border-radius: var(--border-radius-md);
	border: 1px solid var(--color-border);
	box-shadow: 0 2px 4px var(--shadow-color);
}

.recursionContainer {
	flex: 1;
	display: flex;
	flex-direction: column;
	gap: var(--spacing-lg);
	justify-content: flex-start;
	padding: var(--spacing-md);
	background-color: var(--color-surface);
	border-radius: var(--border-radius-md);
	border: 1px solid var(--color-border);
	overflow-y: auto;
}

.recursionLevel {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-sm);
	position: relative;
}

.levelIndicator {
	font-size: var(--font-size-sm);
	font-weight: 600;
	color: var(--color-text-secondary);
	text-align: center;
	padding: var(--spacing-xs);
	background-color: var(--color-slight-grey);
	border-radius: var(--border-radius-sm);
	width: fit-content;
	margin: 0 auto;
}

.nodesRow {
	display: flex;
	justify-content: center;
	align-items: center;
	gap: var(--spacing-lg);
	position: relative;
}

/* Recursion node - shows current state */
.recursionNode {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-xs);
	align-items: center;
	padding: var(--spacing-sm);
	border-radius: var(--border-radius-md);
	transition: all var(--transition);
	position: relative;
	background-color: transparent;
	border: 2px solid transparent;
}

.nodeElements {
	display: flex;
	gap: 3px;
	align-items: center;
	flex-wrap: wrap;
	justify-content: center;
}

/* Recursion element - individual numbers */
.recursionElement {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	min-width: 24px;
	height: 24px;
	padding: 2px 6px;
	font-family: var(--font-family-mono);
	font-size: 12px;
	font-weight: 600;
	border-radius: var(--border-radius-sm);
	transition: all var(--transition);
	background-color: var(--color-light-grey);
	color: var(--color-text-primary);
	border: 1px solid var(--color-border);
}

.nodeLabel {
	font-size: 10px;
	font-weight: 500;
	font-family: var(--font-family-mono);
	color: var(--color-text-secondary);
	margin-top: 2px;
}

/* Node states showing recursion progress */
.recursionNode.active {
	background-color: rgba(123, 66, 246, 0.1);
	border-color: var(--color-primary);
	box-shadow: 0 0 8px rgba(123, 66, 246, 0.3);
}

.recursionNode.merging {
	background-color: var(--color-lighter-blue);
	border-color: var(--color-secondary);
	box-shadow: 0 0 6px var(--color-lighter-blue);
}

.recursionNode.completed {
	background-color: rgba(76, 175, 80, 0.1);
	border-color: var(--color-success);
}

/* Element states */
.recursionElement.comparingElement {
	background-color: var(--color-secondary);
	color: var(--color-surface);
	transform: scale(1.2);
	box-shadow: 0 2px 4px rgba(92, 103, 242, 0.4);
}

.recursionElement.swappingElement {
	background-color: var(--color-error);
	color: var(--color-surface);
	transform: scale(1.2);
	box-shadow: 0 2px 4px rgba(220, 53, 69, 0.4);
}

.recursionElement.sortedElement {
	background-color: var(--color-success);
	color: var(--color-surface);
	box-shadow: 0 2px 4px rgba(76, 175, 80, 0.4);
}

/* Flow arrows showing direction */
.flowArrow {
	position: absolute;
	bottom: -30px;
	left: 50%;
	transform: translateX(-50%);
	font-size: var(--font-size-lg);
	font-weight: 700;
	color: var(--color-primary);
	background-color: var(--color-surface);
	border-radius: 50%;
	width: 30px;
	height: 30px;
	display: flex;
	align-items: center;
	justify-content: center;
	border: 2px solid var(--color-primary);
	z-index: 2;
}

.arrowDown {
	color: var(--color-info);
	border-color: var(--color-info);
}

.arrowUp {
	color: var(--color-success);
	border-color: var(--color-success);
}

/* Connection lines between levels */
.connectionLines {
	position: absolute;
	bottom: -20px;
	left: 0;
	right: 0;
	height: 20px;
	display: flex;
	justify-content: center;
}

.connectionLine {
	width: 2px;
	height: 100%;
	background-color: var(--color-border);
	margin: 0 var(--spacing-lg);
}

/* Merge progress section */
.mergeProgress {
	background-color: var(--color-surface);
	border-radius: var(--border-radius-md);
	border: 1px solid var(--color-border);
	padding: var(--spacing-md);
	box-shadow: 0 2px 4px var(--shadow-color);
}

.mergeVisualization {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-sm);
	align-items: center;
}

.mergeGroup {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-sm);
	align-items: center;
}

.mergeLabel {
	font-weight: 600;
	font-size: var(--font-size-sm);
	color: var(--color-text-secondary);
}

.mergeArrays {
	display: flex;
	align-items: center;
	gap: var(--spacing-md);
}

.leftArray,
.rightArray {
	display: flex;
	gap: 3px;
	align-items: center;
}

.recursionElement.leftMerge {
	background-color: var(--color-secondary);
	color: var(--color-surface);
	border-color: var(--color-secondary);
}

.recursionElement.rightMerge {
	background-color: var(--color-tertiary);
	color: var(--color-surface);
	border-color: var(--color-tertiary);
}

.mergeArrow {
	font-size: var(--font-size-lg);
	font-weight: 700;
	color: var(--color-primary);
}

.emptyState {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 300px;
	color: var(--color-text-secondary);
	font-size: var(--font-size-base);
	background-color: var(--color-surface);
	border-radius: var(--border-radius-md);
	border: 1px solid var(--color-border);
}

/* Responsive design */
@media (max-width: 768px) {
	.recursionElement {
		min-width: 20px;
		height: 20px;
		font-size: 10px;
	}

	.nodesRow {
		gap: var(--spacing-md);
	}

	.mergeArrays {
		flex-direction: column;
		gap: var(--spacing-sm);
	}
}

/* Fast mode optimizations */
.mergeSortContainer.fastMode * {
	animation-duration: 0.05s !important;
	transition-duration: 0.05s !important;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
	.mergeSortContainer * {
		animation: none !important;
		transition: none !important;
	}
}
