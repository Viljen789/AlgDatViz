.dashboardContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
  height: calc(100vh - 120px);
  padding: var(--spacing-md);
  box-sizing: border-box;
}

.mainContentArea {
  flex-grow: 1;
  min-height: 0;
  display: grid;
  gap: var(--spacing-lg);
  grid-template-columns: 1fr 450px;
  grid-template-rows: 1fr auto;
  grid-template-areas:
    "visualizer pseudocode"
    "info       info";
}

.visualizerWrapper,
.pseudoCodeWrapper,
.infoWrapper {
  grid-area: var(--grid-area); /* We will set this via inline style */
  min-width: 0;
  min-height: 0;
}

.visualizerWrapper { --grid-area: visualizer; }
.pseudoCodeWrapper { --grid-area: pseudocode; display: flex; }
.infoWrapper {
  --grid-area: info;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

/* --- THIS IS THE KEY FIX --- */
/* This rule was too broad and caused the layout overlap. */
/* We only want the direct children of the top two wrappers to fill height. */
.visualizerWrapper > *,
.pseudoCodeWrapper > * {
  width: 100%;
  height: 100%;
}

.infoWrapper {
  grid-area: info;
  min-width: 0;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-lg);
}

.infoWrapper > :last-child {
    height: auto;
}

@media (max-width: 1024px) {
  .mainContentArea {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto;
    grid-template-areas:
      "visualizer"
      "pseudocode"
      "info";
    overflow-y: auto;
    padding-right: var(--spacing-sm);
  }
  .pseudoCodeWrapper {
    max-height: 400px;
  }
}

@media (max-width: 768px) {
    .dashboardContainer {
        padding: var(--spacing-sm);
        gap: var(--spacing-md);
    }
}
